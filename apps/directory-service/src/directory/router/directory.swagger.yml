components:
  schemas:
    DirectoryEntry:
      title: Directory entry
      type: object
      properties:
        urn:
          type: string
          description: ADSP urn of the service or API.
        url:
          type: string
          description: Url of the service or API.
        service:
          type: string
          description: Name of the service.
        api:
          type: string
          description: Name of the API.
        namespace:
          type: string
          description: Namespace of the directory entry.
    Link:
      type: object
      properties:
        href:
          type: string
        title:
          type: string
    ServiceMetadata:
      title: Service metadata
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            api:
              oneOf:
                - $ref: '#/components/schemas/Link'
                - type: array
                  items:
                    $ref: '#/components/schemas/Link'
            doc:
              $ref: '#/components/schemas/Link'
            health:
              $ref: '#/components/schemas/Link'
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Link'
              - type: array
                items:
                  $ref: '#/components/schemas/Link'

'/directory/v2/namespaces/{namespace}/entries':
  get:
    tags:
      - Directory service
    description: Fetch all directory entries by namespace
    parameters:
      - name: namespace
        description: namespace of the directory entry
        in: path
        required: true
        schema:
          type: string
    responses:
      200:
        description: Request completed successfully.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DirectoryEntry'

'/directory/v2/namespaces/{namespace}/services':
  post:
    tags:
      - Directory service
    description: Add a new service to the directory
    parameters:
      - name: namespace
        description: namespace of the directory entry
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              service:
                type: string
              url:
                type: string
    responses:
      201:
        description: Directory entry is successfully added
      400:
        description: Bad request
      401:
        description: Unauthorized

'/directory/v2/namespaces/{namespace}/services/{service}':
  get:
    tags:
      - Directory service
    description: Fetch the service data
    parameters:
      - name: namespace
        description: namespace of the directory entry
        in: path
        required: true
        schema:
          type: string
      - name: service
        description: name of the service
        in: path
        required: true
        schema:
          type: string
    responses:
      200:
        description: Returns the service's metadata
        content:
          application/json:
            schema:
              type: object
              properties:
                _id:
                  type: string
                service:
                  type: string
                host:
                  type: string
                metadata:
                  $ref: '#/components/schemas/ServiceMetadata'
      401:
        description: Unauthorized
  patch:
    tags:
      - Directory service
    description: Update the url of the specified service
    parameters:
      - name: namespace
        description: namespace of the directory entry
        in: path
        required: true
        schema:
          type: string
      - name: service
        description: name of the service to be updated
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              url:
                type: string
    responses:
      201:
        description: Directory entry is successfully updated
      400:
        description: Bad request
      401:
        description: Unauthorized

  delete:
    tags:
      - Directory service
    description: Delete the specified service entry
    parameters:
      - name: namespace
        description: namespace of the directory entry
        in: path
        required: true
        schema:
          type: string
      - name: service
        description: name of the service to be deleted
        in: path
        required: true
        schema:
          type: string
    responses:
      200:
        description: The entry was successfully deleted.
      401:
        description: Unauthorized

'/directory/v2/namespaces/{namespace}/services/{service}/apis':
  get:
    tags:
      - Directory service
    description: Fetch the API entries for the specified service.
    parameters:
      - name: namespace
        description: namespace of the directory entry
        in: path
        required: true
        schema:
          type: string
      - name: service
        description: Name of the service
        in: path
        required: true
        schema:
          type: string
    responses:
      200:
        description: Request completed successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: object
                  description: The directory entries for the requested service apis.
                  properties:
                    namespace:
                      type: string
                    service:
                      type: string
                    url:
                      type: string
                    urn:
                      type: string
                apis:
                  type: array
                  description: A list of service API entries for the requested service.
                  items:
                    $ref: '#/components/schemas/DirectoryEntry'
  post:
    tags:
      - Directory service
    description: Add a new service API to the directory
    parameters:
      - name: namespace
        description: namespace of the directory entry
        in: path
        required: true
        schema:
          type: string
      - name: service
        description: name of the service to which the API will be added
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              api:
                type: string
              url:
                type: string
    responses:
      201:
        description: Directory entry is successfully added
      400:
        description: Bad request
      401:
        description: Unauthorized

'/directory/v2/namespaces/{namespace}/services/{service}/apis/{api}':
  patch:
    tags:
      - Directory service
    description: Update the url of the specified service API
    parameters:
      - name: namespace
        description: namespace of the directory entry
        in: path
        required: true
        schema:
          type: string
      - name: service
        description: name of the service
        in: path
        required: true
        schema:
          type: string
      - name: api
        description: name of the service API
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              url:
                type: string
    responses:
      201:
        description: Directory entry is successfully updated
      400:
        description: Bad request
      401:
        description: Unauthorized

  delete:
    tags:
      - Directory service
    description: Delete the specified service API entry
    parameters:
      - name: namespace
        description: namespace of the entry
        in: path
        required: true
        schema:
          type: string
      - name: service
        description: name of the service
        in: path
        required: true
        schema:
          type: string
      - name: api
        description: name of the service API
        in: path
        required: true
        schema:
          type: string
    responses:
      200:
        description: The entry was successfully deleted
      401:
        description: Unauthorized
