components:
  schemas:
    Tag:
      type: object
      properties:
        label:
          type: string
        value:
          type: string
    Resource:
      type: object
      properties:
        urn:
          type: string
        name:
          type: string
        description:
          type: string
    TagResourceOperation:
      type: object
      properties:
        operation:
          type: string
          enum: [tag-resource]
        tag:
          $ref: "#/components/schemas/Tag"
        resource:
          $ref: "#/components/schemas/Resource"
      required: [operation, tag, resource]
    UntagResourceOperation:
      type: object
      properties:
        operation:
          type: string
          enum: [untag-resource]
        tag:
          $ref: "#/components/schemas/Tag"
        resource:
          $ref: "#/components/schemas/Resource"
      required: [operation, tag, resource]

/tags:
  get:
    tags:
      - Resource
    description: Retrieves tags.
    parameters:
      - name: top
        description: Number of results to retrieve.
        in: query
        required: false
        schema:
          type: number
      - name: after
        description: Cursor for page of results to retrieve.
        in: query
        required: false
        schema:
          type: string
      - name: resource
        description: URN of the resource to retrieve tags for.
        in: query
        required: false
        schema:
          type: string
    responses:
      200:
        description: Request completed successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                results:
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                page:
                  type: object
                  properties:
                    next:
                      description: Cursor for requesting the next next page, if any.  Next will be undefined if no more results are available.
                      example: Ng==
                      type: string
                    size:
                      description: The number of results returned.
                      example: 10
                      type: number
                    after:
                      description: |
                        The cursor used to generate the current page. Note - Do not use this as the *after* parameter in subsequent calls,
                        as it will just repeat the set just returned.
                      example: Mw==
                      type: string
      400:
        description: Bad request
      401:
        description: Unauthorized
  post:
    tags:
      - Resource
    description: Tag or untag a resource.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/TagResourceOperation"
              - $ref: "#/components/schemas/UntagResourceOperation"
            discriminator:
              propertyName: operation
              mapping:
                tag-resource: "#/components/schemas/TagResourceOperation"
                untag-resource: "#/components/schemas/UntagResourceOperation"
    responses:
      200:
        description: Request completed successfully
      400:
        description: Bad request
      401:
        description: Unauthorized

/tags/{tag}/resources:
  get:
    tags:
      - Resource
    description: Retrieves tagged resources.
    parameters:
      - name: top
        description: Number of results to retrieve.
        in: query
        required: false
        schema:
          type: number
      - name: after
        description: Cursor for page of results to retrieve.
        in: query
        required: false
        schema:
          type: string
      - name: tag
        description: Value of the tag.
        in: path
        required: true
        schema:
          type: string
    responses:
      200:
        description: Request completed successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                results:
                  type: array
                  items:
                    $ref: "#/components/schemas/Resource"
                page:
                  type: object
                  properties:
                    next:
                      description: Cursor for requesting the next next page, if any.  Next will be undefined if no more results are available.
                      example: Ng==
                      type: string
                    size:
                      description: The number of results returned.
                      example: 10
                      type: number
                    after:
                      description: |
                        The cursor used to generate the current page. Note - Do not use this as the *after* parameter in subsequent calls,
                        as it will just repeat the set just returned.
                      example: Mw==
                      type: string
      400:
        description: Bad request
      401:
        description: Unauthorized
