FileUpdate401: &FileUpdate401
  description: |
    Unauthorized. The allowed user groups are listed as follows:
      | Group Name    | Keycloak Realm| Client  | Role|
      | ------------- |:-------------:| -------:|-------:|
      | GoA  | Tenant Realms | tenant-platform-webapp | File type update roles |

Tenant401: &Tenant401
  description: |
    Unauthorized. The allowed user groups are listed as follows:
      | Group Name    | Keycloak Realm| Client  |
      | ------------- |:-------------:| -------:|
      | GoA  | Tenant Realms | any |


"/file/v1/files/{fileId}":
  delete:
    tags:
    - File
    description: Marks a file for deletion.
    parameters:
    - name: fileId
      description: ID of the file to delete.
      in: path
      required: true
      schema:
        type: string
    responses:
      '200':
        description: Delete result
        content:
          application/json:
            schema:
              type: object
              properties:
                deleted:
                  type: boolean
      '404':
        description: file not found
      '401': *FileUpdate401
  get:
    tags:
    - File
    description: Retrieves a file's metadata.
    parameters:
    - name: fileId
      description: ID of the file to retrieve.
      in: path
      required: true
      schema:
        type: string
    responses:
      '200':
        description: File metadata
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                filename:
                  type: string
                size:
                  type: number
                scanned:
                  type: boolean
                deleted:
                  type: boolean
      '404':
        description: file not found
      '401': *Tenant401

"/file/v1/files":
  post:
    tags:
      - File
    description: Upload a file.
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              type:
                type: string
                description: Type of the file.
              recordId:
                type: string
                description: ID of the record associated with the file.
              filename:
                type: string
                description: Name of the file.
              file:
                type: string
                format: binary
                description: Contents of the file.
    responses:
      '200':
        description: File successfully uploaded.
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                filename:
                  type: string
                size:
                  type: number
      '400':
        description: Invalid parameters.
      '404':
        description: Space or type not found.
      '401': *FileUpdate401

  get:
    tags:
      - File
    description: Retrieves file list metadata.
    responses:
      '200':
        description: File metadata
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  filename:
                    type: string
                  size:
                    type: number
                  fileURN:
                    type: string
      '404':
        description: file not found
      '401': *Tenant401

"/file/v1/files/{fileId}/download":
  get:
    tags:
      - File
    description: Downloads a file.
    parameters:
    - name: fileId
      description: ID of the file to download.
      in: path
      required: true
      schema:
        type: string
    responses:
      '200':
        description: File binary content
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      '404':
        description: file not found
      '401': *FileUpdate401

"/files/fileType/:fileTypeId":
  get:
    tags:
      - File
    description: Get whether have the files of given file type.
    parameters:
    - name: fileTypeId
      description: ID of file type.
      in: path
      required: true
      schema:
        type: string
    responses:
      '200':
        description: Successfully get whether have the files of given file type.
        content:
          application/json:
            schema:
              type: object
              properties:
                exist:
                  type: boolean
      '404':
        description: file not found
      '401': *FileUpdate401