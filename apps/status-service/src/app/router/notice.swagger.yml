400: &400
  description: Bad request
401: &401
  description: Unauthorized
500: &500
  description: Internal server error

'/notices/v1/':
  get:
    tags: [NoticeApplicationEntity]
    description: Retrieves all published (mode=active) notices for public user;
      Retrieves all of notices of a tenant for tenant admin;
      Retrieves published notices of a tenant for non tenant admin.
    parameters:
      - name: top
        description: Number of results to read.
        in: query
        required: false
        schema:
          type: number
      - name: after
        description: Cursor for next set of results.
        in: query
        required: false
        schema:
          type: string
      - name: mode
        description: Mode type.
        in: query
        required: false
        schema:
          type: string
    responses:
      200:
        description: Notices successfully retrieved.
  post:
    tags: [NoticeApplicationEntity]
    description: Creates a notice.
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                required: true
              tennantServRef:
                type: string
                required: true
              startDate:
                type: date
                required: true
              endDate:
                type: date
                required: true
              mode:
                type: string
                required: true
    responses:
      200:
        description: Notice successfully created.
      400: *400
      401: *401
      500: *500

'/notices/v1/{id}':
  get:
    tags: [NoticeApplicationEntity]
    description: Retrieves a single notice.
    parameters:
      - name: id
        description: Notice id.
        in: path
        required: true
        schema:
          type: string
    responses:
      200:
        description: Notice successfully retrieved.
      404:
        description: Notice not found.
  patch:
    tags: [NoticeApplicationEntity]
    description: Update a notice.
    parameters:
      - name: id
        description: Notice id.
        in: path
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                required: true
              tennantServRef:
                type: string
                required: true
              startDate:
                type: date
                required: true
              endDate:
                type: date
                required: true
              mode:
                type: string
                required: true
    responses:
      200:
        description: Notice successfully updated.
      401: *401
  delete:
    tags: [NoticeApplicationEntity]
    description: Deletes notice..
    parameters:
      - name: id
        description: Id of the notice.
        in: path
        required: true
        schema:
          $ref: '#.../model/NoticeApplicationEntity'
    responses:
      200:
        description: Notice successfully deleted.
      401: *401
      404:
        description: Notice not found.
