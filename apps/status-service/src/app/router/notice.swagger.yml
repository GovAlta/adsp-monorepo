components:
  schemas:
    Notice:
      description: Detailed information to be posted about an application's status.  The notice may include a message, a time period to which the notice applies, and the application status for the period.
      type: object
      properties:
        message:
          description: The message portion the notice.
          required: false
          type: string
          example: My Application will be down for weekly maintenance during the following hours.
        tennantServRef:
          description: The tennantServRef (sic) identifies which applications the notice applies to.
          type: array
          items:
            type: object
            properties:
              id:
                description: The application's appKey (or ID).
                type: string
                example: my-application
              name:
                description: The name of the Application.
                type: string
                example: My Application
        startDate:
          description: The start of the time period to which the notice applies.
          type: string
          format: date-time
        endDate:
          description: The end of the time period to which the notice applies.
          type: string
          format: date-time
        mode:
          description: A notice may be in draft or published mode.  Only published notices are displayed on the public microsite.
          type: string
          example: draft
  responses:
    BadRequest:
      description: Bad request
    Unauthorized:
      description: Unauthorized
    InternalServerError:
      description: Internal server error

/notice/v1/notices:
  get:
    tags: [Notice]
    description: Retrieves all published (mode=active) notices for public user;
      Retrieves all of notices of a tenant for tenant admin;
      Retrieves published notices of a tenant for non tenant admin.
    parameters:
      - name: top
        description: Number of results to read.
        in: query
        required: false
        schema:
          type: number
      - name: after
        description: Cursor for next set of results.
        in: query
        required: false
        schema:
          type: string
      - name: mode
        description: Mode type.
        in: query
        required: false
        schema:
          type: string
      - name: name
        description: Fetch public (active) notices by tenant name.
        in: query
        required: false
        schema:
          type: string
    responses:
      200:
        description: Notices successfully retrieved.
  post:
    tags: [Notice]
    description: Creates a notice.
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Notice'
    responses:
      200:
        description: Notice successfully created.
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      500:
        $ref: '#/components/responses/InternalServerError'

/notice/v1/notices/{id}:
  parameters:
    - name: id
      description: Notice id.
      in: path
      required: true
      schema:
        type: string
  get:
    tags: [Notice]
    description: Retrieves a single notice.
    responses:
      200:
        description: Notice successfully retrieved.
      404:
        description: Notice not found.
  patch:
    tags: [Notice]
    description: Update a notice.
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Notice'
    responses:
      200:
        description: Notice successfully updated.
      401:
        $ref: '#/components/responses/Unauthorized'
  delete:
    tags: [Notice]
    description: Deletes a notice.
    responses:
      200:
        description: Notice successfully deleted.
      401:
        $ref: '#/components/responses/Unauthorized'
      404:
        description: Notice not found.
