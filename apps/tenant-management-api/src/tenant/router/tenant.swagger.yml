components:
  schemas:
    Tenant:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        realm:
          type: string
        adminEmail:
          type: string

/api/tenant/v1:
  post:
    deprecated: true
    tags:
      - Tenant service
    description: Create a new tenant.
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: When name is provided, new tenant will be created
              tenantName:
                type: string
                description: When [tenantName, email, realm] are provided, only database will be update.
              realm:
                type: string
                description: When [tenantName, email, realm] are provided, only database will be update.
              email:
                type: string
                description: When [tenantName, email, realm] are provided, only database will be update.
    responses:
      200:
        description: Tenant is created
      401:
        description: Unauthorized
      400:
        description: Bad Request
      409:
        description: The tenant name is used.
  delete:
    deprecated: true
    tags:
      - Tenant service
    description: Delete a tenant.
    parameters:
      - in: query
        name: realm
        schema:
          type: string
          description: Tenant Name
    responses:
      200:
        description: Tenant is deleted
      401:
        description: Unauthorized

/api/tenant/v1/realm/roles:
  get:
    deprecated: true
    tags:
      - Tenant service
    description: Return the realm roles of the tenant
    responses:
      200:
        description: Return tenant realm roles
      401:
        description: Unauthorized
/api/tenant/v1/email:
  post:
    deprecated: true
    tags:
      - Tenant service
    description: Fetch the tenant admin information by email.
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
    responses:
      200:
        description: Return tenant information by email
      401:
        description: Unauthorized
/api/tenant/v1/user/default-idp:
  get:
    tags:
      - Tenant service
    description: Check the ADSP IdP for the given user in the core realm.
    parameters:
      - in: query
        name: userId
        schema:
          type: string
    responses:
      200:
        description: Return whether the default IdP exists in core realm or not.
        content:
          application/json:
            schema:
              type: object
              properties:
                hasDefaultIdpInCore:
                  type: boolean
      401:
        description: Unauthorized

/api/tenant/v2/tenants:
  get:
    tags:
      - Tenant service
    description: Search for tenants
    parameters:
      - in: query
        name: name
        schema:
          type: string
        description: Search criteria
      - in: query
        name: realm
        schema:
          type: string
        description: Search criteria
      - in: query
        name: adminEmail
        schema:
          type: string
        description: Search criteria
    responses:
      200:
        description: Return tenant information
        content:
          application/json:
            schema:
              type: object
              properties:
                results:
                  type: array
                  items:
                    $ref: '#/components/schemas/Tenant'
                page:
                  type: object
                  properties:
                    after:
                      type: string
                    next:
                      type: string
                    size:
                      type: number
      401:
        description: Unauthorized
  post:
    tags:
      - Tenant service
    description: Create a tenant.
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              realm:
                type: string
              adminEmail:
                type: string
    responses:
      200:
        description: Return tenant information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
      401:
        description: Unauthorized

/api/tenant/v2/tenants/{id}:
  parameters:
    - in: path
      name: id
      schema:
        type: string
      required: true
      description: tenant id
  get:
    tags:
      - Tenant service
    description: Retrieves a tenant.
    responses:
      200:
        description: Return tenant information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
      401:
        description: Unauthorized
  delete:
    tags:
      - Tenant service
    description: Deletes a tenant.
    responses:
      200:
        description: Tenant deletion completed.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
      401:
        description: Unauthorized
