apiVersion: v1
kind: List
parameters:
- name: IMAGE_TAG
  displayName: "Image Tag"
  description: "Tag of the timescaledb image to use."
  # Note that -bitnami is used because the regular tag uses alpine based Postgres image where
  # initDb script does not work in OpenShift because of arbitrary UID.
  value: 1.7.1-pg12-bitnami
  required: true
- name: MEMORY_LIMIT
  displayName: "Memory Limit"
  description: "Maximum amount of memory the container can use."
  value: 512Mi
  required: true
- name: DATABASE_SERVICE_NAME
  displayName: "Database Service Name"
  description: "The name of the OpenShift service exposed for the database."
  value: timescaledb
  required: true
- name: DATABASE_NAME
  displayName: "Database Name"
  descriptiOn: "Name of the database accessed."
  value: "sampledb"
  required: true
- name: DATABASE_PASSWORD
  displayName: "Database Connection Password"
  description: "Password for the database user used to access the database."
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: VOLUME_CAPACITY
  displayName: "Volume Capacity"
  description: "Volume space available for data."
  value: 1Gi
  required: true
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: file-av-db
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 250Mi
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      slave-label: node12
    creationTimestamp: '2020-11-09T05:29:46Z'
    generation: 1
    labels:
      role: jenkins-slave
    name: jenkins-agent-node12
    namespace: core-services-infra
    resourceVersion: '145866744'
    selfLink: >-
      /apis/image.openshift.io/v1/namespaces/core-services-infra/imagestreams/jenkins-agent-node12
    uid: 942d5e66-224c-11eb-9888-00505698a8f1
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: 'docker-registry.default.svc:5000/core-services-infra/jenkins-agent-node12'
    tags:
      - items:
          - created: '2020-11-09T23:47:23Z'
            dockerImageReference: >-
              docker-registry.default.svc:5000/core-services-infra/jenkins-agent-node12@sha256:2755cba069b94dbf3f06bb1e04618705dabdbfc5939ad59f8ea1aebd406f778e
            generation: 1
            image: >-
              sha256:2755cba069b94dbf3f06bb1e04618705dabdbfc5939ad59f8ea1aebd406f778e
        tag: latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: file-service
    name: file-service
  spec:
    tags:
      - annotations: null
        generation: 2
        importPolicy: {}
        name: dev
        referencePolicy:
          type: Source
      - annotations: null
        generation: 3
        importPolicy: {}
        name: latest
        referencePolicy:
          type: Source
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    creationTimestamp: '2020-11-12T14:23:23Z'
    labels:
      app: file-service
    name: file-service
    namespace: core-services-infra
    resourceVersion: '208427'
    selfLink: >-
      /apis/build.openshift.io/v1/namespaces/core-services-infra/buildconfigs/file-service
    uid: 9f11b171-24f2-11eb-831d-00155d014800
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'file-service:latest'
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      dockerStrategy:
        buildArgs:
          - name: SERVICE
            value: file-service
        dockerfilePath: .openshift/service/Dockerfile
      type: Docker
  triggers:
    - type: ConfigChange
  status:
    lastVersion: 1
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: file-service-files
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    creationTimestamp: '2020-10-09T16:24:42Z'
    labels:
      app: jenkins-agent-node12
      build: jenkins-agent-node12-build
    name: jenkins-agent-node12-build
    namespace: core-services-infra
    resourceVersion: '145866539'
    selfLink: >-
      /apis/build.openshift.io/v1/namespaces/core-services-infra/buildconfigs/jenkins-agent-node12-build
    uid: efd28a61-0a4b-11eb-948e-00505698f6fe
  spec:
    failedBuildsHistoryLimit: 2
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'jenkins-agent-node12:latest'
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: agent-nodejs-12
      git:
        uri: 'https://github.com/openshift/jenkins.git'
      type: Git
    strategy:
      dockerStrategy: {}
      type: Docker
    successfulBuildsHistoryLimit: 2
    triggers:
      - type: ConfigChange
  status:
    lastVersion: 6
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    creationTimestamp: '2020-10-09T19:50:39Z'
    name: core-services-pipeline
    namespace: core-services-infra
    resourceVersion: '146962595'
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: CS-211
        uri: 'https://gitlab.gov.ab.ca/dio/core/core-services.git'
      sourceSecret:
        name: core-services-gitlab
      type: Git
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfilePath: Jenkinsfile
      type: JenkinsPipeline
    successfulBuildsHistoryLimit: 5
    triggers:
      - gitlab:
          secretReference:
            name: core-services-gitlab-webhook
        type: GitLab
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: tenant-management-api
    name: tenant-management-api
  spec: {}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: tenant-management-api
    name: tenant-management-api
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'tenant-management-api:latest'
    postCommit: {}
    resources: {}
    source:
      binary: {}
      type: Binary
    strategy:
      dockerStrategy:
        buildArgs:
          - name: SERVICE
            value: tenant-management-api
        dockerfilePath: .openshift/service/Dockerfile
      type: Docker
    triggeredBy:
      - type: ConfigChange
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: tenant-management-webapp
    name: tenant-management-webapp
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: nginx-image-runtime
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: 'centos/nginx-112-centos7:latest'
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: web-app-builder-runtime
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: nodeshift/ubi8-s2i-web-app:10.x
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: tenant-management-webapp
    name: tenant-management-webapp
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: tenant-management-webapp:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: 'nginx:latest'
          namespace: openshift
        incremental: true
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers: []
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: tenant-management-webapp
    name: tenant-management-webapp
  spec:
    ports:
    - name: http
      port: 8080
      targetPort: 8080
    selector:
      app: tenant-management-webapp
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: timescaledb
  spec:
    lookupPolicy:
      local: false
    tags:
      - name: 1.7.1-pg12-bitnami
        annotations:
          openshift.io/imported-from: timescale/timescaledb:1.7.1-pg12-bitnami
        from:
          kind: DockerImage
          name: timescale/timescaledb:1.7.1-pg12-bitnami
        referencePolicy:
          type: Source
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    creationTimestamp: '2020-10-09T19:45:24Z'
    generation: 30
    labels:
      app: value-service
    name: value-service
    namespace: core-services-infra
    resourceVersion: '146850662'
    selfLink: >-
      /apis/image.openshift.io/v1/namespaces/core-services-infra/imagestreams/value-service
    uid: f97c6a50-0a67-11eb-a83d-00505698a8f1
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: value-service
    name: value-service
    namespace: core-services-infra
    selfLink: >-
      /apis/build.openshift.io/v1/namespaces/core-services-infra/buildconfigs/value-service
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'value-service:latest'
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      dockerStrategy:
        buildArgs:
          - name: SERVICE
            value: value-service
        dockerfilePath: .openshift/service/Dockerfile
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - type: ConfigChange
